# pretty garbage script to prune and parse NT. Ideally I can just post zipped chunks somewhere for download 

import glob
seq_2_taxid = {}
bad_list = ["KM209255.1","KM209318.1","AF191073.1","KR093640.1","NC_038270.1","MF289414.1","AF065755.1","KU746280.1","AF065756.1","KM209313.1","KM209288.1","KM209277.1","MF094130.1","MH883318.1","AP017398.1","KX077896.1","KT336321.1","JX291540.1","MG593802.1","FM864213.1","KU746283.1","MF172979.1","KT336320.1","AP018399.1","HG424323.1","HE795107.1","LT993247.1","KY065497.1","AY657002.1","AY324828.1","MH643778.1","X52107.1","HQ632826.1","LT985573.1","JN377533.1","MH538296.1","MH552529.1","MF893264.1","MH319740.1","NC_008168.1","JX403939.1","JX495041.1","KC736978.1","KT982185.1","AB047240.1","AJ289710.2","MH883760.1","MF324912.1","MF766045.1","EU579860.1","KU682439.2","U27612.2","AF065660.2","KY555145.1","FN676943.1","LT985590.1","AP000400.1","KY052857.1","M14017.1","MH445380.1","MF417976.1","KF892040.1","KY065484.1","MF417965.1","CP025887.1","KU238070.1","DQ163912.1","MH645156.1","AJ400630.1","EU078592.1","MF094128.1","KM972720.1","KU998233.1","KU978783.1","KJ191556.1","Z48163.2","Z35638.1","KF664581.1","LT985593.1","LS992247.1","KY559403.1","KF478765.1","MF490237.1","KC814930.1","LT996073.1","JX163858.1","KY574513.1","FO818745.1","AF232233.1","DQ115833.1","AY034063.1","JX495042.1","JX495043.1","AC146851.1","LT985581.1","AF261668.1","KU873925.1","KU052038.1","LT996075.1","JX904130.1","HQ442266.1","KU978791.1","KX077893.1","JF501521.1","FN997652.1","GU071095.1","MH910042.1","U27878.1","AF065679.1","FN676933.1","LT985568.1","LT996073.1","LC193725.1","KY348373.1","AF234172.1","MH422554.1","AF234173.1","MH445381.1","DQ838494.1","KP188543.1","LC193725.1","KR381794.1","KY423284.1","MF468142.1","KY348373.1","KU697903.1","KU697902.1","HM133903.1","HQ540594.1","KY883335.1","MH924836.1","KY883317.1","MH052023.1","KY883317.1","MF575148.1","KP642119.1","AM910401.1","HQ637383.1","MF468147.1","MF468140.1","JQ795930.1","KY423284.1","KY348373.1","KF493876.1","KF493877.1","KX905134.1","KU697902.1","KT833852.1","KT833851.1","GU179001.1","GQ121041.1","FJ593289.1","KC977570.1","NC_021858.1","KX574900.1","KX247379.1","MF417880.1","MF417975.1","KY742649.2","MG770349.1","KY742649.2","AY397620.1","DQ318793.1","DQ318792.1","FJ751927.1","DQ318794.1","FJ751926.1","FJ751933.1","DQ318790.1","FJ662762.1","FJ751930.1","AB214978.1","KM209308.1","LN590701.1","LN590712.1","LN590693.1","LN590680.1","LN590709.1","LN590703.1","LN590677.1","LN590691.1","LN590718.1","LN590700.1","LN590705.1","LN590717.1","LN590687.1","LN590704.1","LN590697.1","LN590685.1","LN590698.1","LN590684.1","LN590720.1","LN590713.1","LN590682.1","LN590699.1","LN590695.1","LN590679.1","LN590719.1","LN590710.1","LN590714.1","LN590678.1","LN590689.1","LN590707.1","LN590690.1","LN590696.1","LN590692.1","LN590676.1","LN590686.1","LN590706.1","LN590672.1","LN590683.1","LN590708.1","LN590711.1","LN590716.1","LN590674.1","LN590694.1","LN590675.1","LN590673.1","LN590715.1","LN590681.1","LN590688.1","LN590671.1","LN590702.1","MH036940.1","KU317610.1","MF871618.1","AJ718123.1","LN428689.1","LN324151.1","LN310741.1","KP856129.1","XM_018783050.1","JX622483.1","JX622265.1","JX622264.1","MH036940.1","MH036939.1","MF871618.1","LN379765.1","LN248367.1","NC_011037.1"]

print('loading taxids into memory...')
for line in open('nucl_gb.accession2taxid'):
	line_list = line.split()
	seq_2_taxid[line_list[1]] = line_list[2].rstrip()


for file_name in glob.glob('nt.fna.*'):
	dna_string = ''
	strain_list = []
	genome_list = []
	print('reading ' + file_name + ' into memory')
	num = file_name.split('.')[2]
	for line in open(file_name):
		if line[0] == '>':
			strain_list.append(line.rstrip())
		
			if dna_string != '':
				genome_list.append(dna_string)
				dna_string = ''
		else:
			dna_string += line.rstrip()
	genome_list.append(dna_string)

	viral_500 = open('nt.' + num + '.taxid.fna', 'w')
#viral_1k = open('viral-nt-taxid-1k.fna', 'w')
	print('writing output ' + num)
	for x in range(0,len(strain_list)):
	#length = len(genome_list[x])
		if 1000 >= 500:
			if strain_list[x].split()[0][1:] not in bad_list:
				try:
					taxid = seq_2_taxid[strain_list[x].split()[0][1:]]
				except:
					taxid = '0'
			header = strain_list[x].rstrip() + '#' + taxid + '\n'
			viral_500.write(header)
			viral_500.write(genome_list[x] + '\n')
      
	viral_500.close()
#viral_1k.close()
